// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  firstName  String
  lastName   String
  username   String
  email      String   @unique
  password   String
  country    String[]
  membership String
  role       Role     @default(USER)
  onboarding Boolean  @default(false)
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  sponsorsData SponsorsData?
}

model SponsorsData {
  id             String   @id @default(uuid())
  userId         String   @unique
  status         Status
  companyName    String
  specialization String[]
  description    String
  web            String
  phone          String
  wppMessage     String?
  socials        String[]
  logo           String
  bannerWeb      String
  bannerMobile   String
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  user   User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  posts  SponsorsPost[]
  offers SponsorsOffert[]
}

model SponsorsPost {
  id          String    @id @default(uuid())
  sponsorId   String
  status      Status
  title       String
  category    String
  validFrom   DateTime
  validUntil  DateTime?
  description String
  link        String
  imageWeb    String
  imageMobile String
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  sponsor SponsorsData @relation(fields: [sponsorId], references: [id], onDelete: Cascade)
}

model SponsorsOffert {
  id          String   @id @default(uuid())
  sponsorId   String
  status      Status
  title       String
  discount    String
  validFrom   DateTime
  validUntil  DateTime
  description String
  time        String
  place       String
  intendedFor String
  link        String
  image       String
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  sponsor SponsorsData @relation(fields: [sponsorId], references: [id], onDelete: Cascade)
}

enum Status {
  ACTIVE
  INACTIVE
}

enum Role {
  ADMIN
  USER
  SPONSOR
}
